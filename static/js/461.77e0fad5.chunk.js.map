{"version":3,"file":"static/js/461.77e0fad5.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Pages/Home/Home.styled.jsx","components/Pages/Movies/Movies.styled.jsx","components/Pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Backdrop = styled.div`\nposition: fixed;\ntop:0;\nleft:0;\nright:0;\nbottom:0;\nbackground-color: rgba(36,36,36, 0.5);\n`\n\nexport const WrapperForLoader = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\ntransform: translate(-50%,-50%)\n`;","import { BallTriangle } from 'react-loader-spinner';\nimport { Backdrop, WrapperForLoader } from \"./Loader.styled\"\n\nexport const Loader = () => {\n  return (\n    <Backdrop>\n        <WrapperForLoader>\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#6c4da9\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n      </WrapperForLoader>\n    </Backdrop>\n  );\n};","import styled from 'styled-components';\n\nexport const SectionTopMovies = styled.section`\n  padding: 20px;\n  width: 1440px;\n  margin: 0 auto;\n  background-color: #fff;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  font-size: 40px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const ListTopMovies = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  li {\n    font-size: 18px;\n    font-weight: 600;\n  }\n`;\nexport const MoviesText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: black\n  font-size: 18px;\n  font-weight: 600;\n  text-decoration: none;\n`;\n\n// export const Links = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 8px;\n//   color: black\n//   font-size: 18px;\n//   font-weight: 600;\n//   text-decoration: none;\n// `;","import styled from 'styled-components';\n\n\n\nexport const LabelSearch = styled.label`\nmargin-top: 20px;\nmargin-left: 20px;\ndisplay: block;\n  font-weight: bold;\n  margin-bottom: 10px;\n`\n\nexport const InputSearch = styled.input`\npadding: 5px;\n  padding-left: 24px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 14px;\n`\n\nexport const FormSearch = styled.form`\nmargin-top: 20px;\n`\nexport const SearchButton = styled.button`\nmargin-left: 10px;\n    width: 100px;\n    height: 29px;\n    border: 2px;\n    background-color: gray;\n    border-radius: 3px;`\n\n// export const MoviesWrapper = styled.div`\n//   display: flex;\n// `;\n\n// export const SearchForm = styled.form`\n//   margin-right: 50px;\n// `;\n\n// export const NotFoundContainer = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n// `;\n\n// export const NotFoundMessage = styled.p`\n//   color: red;\n//   font-weight: bold;\n// `;\n\n// export const SearchLabel = styled.label`\n//   display: block;\n//   font-weight: bold;\n//   margin-bottom: 10px;\n// `;\n\n// export const SearchInput = styled.input`\n//   padding: 5px;\n//   border: 1px solid #ccc;\n//   border-radius: 4px;\n//   font-size: 14px;\n// `;\n\n// export const MovieList = styled.ul`\n//   list-style: none;\n//   width: 100%;\n//   padding: 0;\n//   display: grid;\n//   grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n//   grid-gap: 20px;\n//   & a{\n//     display: block;\n//     text-decoration: none;\n//     color: grey;\n//     text-align: center\n    \n//   }\n// `;\n\n// export const MovieItem = styled.li`\n//   background-color: #fff;\n//   padding: 10px;\n//   border-radius: 4px;\n//   box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n//   &:hover{\n//     background-color: orange;\n//     & a{\n//       color: black;\n//     }\n//   }\n// `;","import { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getMovie } from 'components/Api/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport { FormSearch, InputSearch, LabelSearch, SearchButton } from './Movies.styled'; \nimport { MoviesText } from '../Home/Home.styled';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchInputValue, setSearchInputValue] = useState(\"\");\n  const [isInputEmpty, setIsInputEmpty] = useState(true);\n\n  useEffect(() => {\n  const fetchMovie = async () => {\n    const movieName = searchMovie.get('movieName') ?? '';\n    \n    try {\n      setIsLoading(true);\n      const data = await getMovie(movieName);\n      setMovies(data.results);\n      if (data.results.length === 0) {\n        setError(`Movie '${movieName}' not found`);\n      } else {\n        setError(null);\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  fetchMovie();\n  }, [searchMovie]);\n\n\n  useEffect(() => {\n    const movieName = searchMovie.get('movieName') ?? '';\n    setSearchInputValue(movieName);\n    // fetchMovie();\n  }, [searchMovie]);\n\n  const handleSearch = evt => {\n    setSearchInputValue(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (searchInputValue === '') {\n      setSearchMovie({});\n    } else {\n      setIsInputEmpty(false)\n      setSearchMovie({ movieName: searchInputValue });\n    }\n  };\n\n  const handleButtonClick = () => {\n    handleSubmit(new Event('submit'));\n  };\n\n  \n\n  return (\n    <>\n      {!isInputEmpty && error && (\n       <p>Movie {searchInputValue} not found</p>\n      )}\n\n      {isLoading && <Loader />}\n      <FormSearch onSubmit={handleSubmit}>\n        <LabelSearch>Movie search</LabelSearch>\n        <InputSearch \n          type=\"text\" \n          value={searchInputValue}\n          onChange={handleSearch} />\n        <SearchButton type=\"button\" onClick={handleButtonClick}>\n          Search\n        </SearchButton>\n      </FormSearch>\n\n      {movies.map(movie => (\n        <MoviesText key={movie.id}>\n          <Link to={{ pathname: `/movies/${movie.id}`, state: { from: '/movies' } }}>\n            {movie.title}\n          </Link>\n        </MoviesText>\n      ))}\n    </>\n  );\n};\n\nexport default Movies;\n\n\n\n// import { useEffect, useState } from 'react';\n// import { Link, useSearchParams } from 'react-router-dom';\n// import { getMovie } from 'components/Api/Api';\n// import { Loader } from 'components/Loader/Loader';\n// import { FormSearch, InputSearch, LabelSearch, SearchButton } from './Movies.styled'; \n// import { MoviesText } from '../Home/Home.styled';\n\n// const Movies = () => {\n//   const [searchMovie, setSearchMovie] = useSearchParams();\n//   const [movies, setMovies] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [ setError] = useState(null);\n//   const [searchInputValue, setSearchInputValue] = useState(\"\");\n\n//   const fetchMovie = async () => {\n//     const movieName = searchMovie.get('movieName') ?? '';\n    \n//     try {\n//       setIsLoading(true);\n//       const data = await getMovie(movieName);\n//       setMovies(data.results);\n//       if (data.results.length === 0) {\n//         setError(`Movie '${movieName}' not found`);\n//       } else {\n//         setError(null);\n//       }\n//     } catch (error) {\n//       setError(error.message);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const handleSearch = evt => {\n//     setSearchInputValue(evt.target.value);\n//   };\n\n//   const handleSubmit = evt => {\n//     evt.preventDefault();\n//     if (searchInputValue === '') {\n//       setSearchMovie({});\n//     } else {\n//       setSearchMovie({ movieName: searchInputValue });\n//     }\n//   };\n\n//   const handleButtonClick = () => {\n//     handleSubmit(new Event('submit'));\n//   };\n\n//   useEffect(() => {\n//     const movieName = searchMovie.get('movieName') ?? '';\n//     setSearchInputValue(movieName);\n//     fetchMovie();\n//   }, [searchMovie]);\n\n//   return (\n//     <>\n//       {/* {!searchInputValue && error && (\n//        <p>Movie {searchInputValue} not found</p>\n//       )} */}\n\n//       {isLoading && <Loader />}\n//       <FormSearch onSubmit={handleSubmit}>\n//         <LabelSearch>Movie search</LabelSearch>\n//         <InputSearch \n//           type=\"text\" \n//           value={searchInputValue}\n//           onChange={handleSearch} />\n//         <SearchButton type=\"button\" onClick={handleButtonClick}>\n//           Search\n//         </SearchButton>\n//       </FormSearch>\n\n//       {movies.map(movie => (\n//         <MoviesText key={movie.id}>\n//           <Link to={{ pathname: `/movies/${movie.id}`, state: { from: '/movies' } }}>\n//             {movie.title}\n//           </Link>\n//         </MoviesText>\n//       ))}\n//     </>\n//   );\n// };\n\n// export default Movies;\n\n\n\n\n\n\n"],"names":["Backdrop","styled","_templateObject","_taggedTemplateLiteral","WrapperForLoader","_templateObject2","Loader","_jsx","children","BallTriangle","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","SectionTopMovies","ListTopMovies","_templateObject3","MoviesText","_templateObject4","LabelSearch","InputSearch","FormSearch","SearchButton","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchMovie","setSearchMovie","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","searchInputValue","setSearchInputValue","_useState9","_useState10","isInputEmpty","setIsInputEmpty","useEffect","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_searchMovie$get","movieName","data","wrap","_context","prev","next","get","getMovie","sent","results","length","concat","t0","message","finish","stop","apply","arguments","_searchMovie$get2","handleSubmit","evt","preventDefault","_jsxs","_Fragment","onSubmit","type","value","onChange","target","onClick","Event","map","movie","Link","to","pathname","id","state","from","title"],"sourceRoot":""}